// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/google/trillian-examples/railgun/storage (interfaces: ShardStorage)

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	gomock "github.com/golang/mock/gomock"
	shardproto "github.com/google/trillian-examples/railgun/shard/shardproto"
	reflect "reflect"
)

// MockShardStorage is a mock of ShardStorage interface
type MockShardStorage struct {
	ctrl     *gomock.Controller
	recorder *MockShardStorageMockRecorder
}

// MockShardStorageMockRecorder is the mock recorder for MockShardStorage
type MockShardStorageMockRecorder struct {
	mock *MockShardStorage
}

// NewMockShardStorage creates a new mock instance
func NewMockShardStorage(ctrl *gomock.Controller) *MockShardStorage {
	mock := &MockShardStorage{ctrl: ctrl}
	mock.recorder = &MockShardStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShardStorage) EXPECT() *MockShardStorageMockRecorder {
	return m.recorder
}

// CreateShardConfig mocks base method
func (m *MockShardStorage) CreateShardConfig(arg0 *shardproto.ShardProto) error {
	ret := m.ctrl.Call(m, "CreateShardConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateShardConfig indicates an expected call of CreateShardConfig
func (mr *MockShardStorageMockRecorder) CreateShardConfig(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShardConfig", reflect.TypeOf((*MockShardStorage)(nil).CreateShardConfig), arg0)
}

// DeleteShardConfig mocks base method
func (m *MockShardStorage) DeleteShardConfig() error {
	ret := m.ctrl.Call(m, "DeleteShardConfig")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteShardConfig indicates an expected call of DeleteShardConfig
func (mr *MockShardStorageMockRecorder) DeleteShardConfig() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShardConfig", reflect.TypeOf((*MockShardStorage)(nil).DeleteShardConfig))
}

// GetShardConfig mocks base method
func (m *MockShardStorage) GetShardConfig() (*shardproto.ShardProto, error) {
	ret := m.ctrl.Call(m, "GetShardConfig")
	ret0, _ := ret[0].(*shardproto.ShardProto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShardConfig indicates an expected call of GetShardConfig
func (mr *MockShardStorageMockRecorder) GetShardConfig() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShardConfig", reflect.TypeOf((*MockShardStorage)(nil).GetShardConfig))
}

// UpdateShardConfig mocks base method
func (m *MockShardStorage) UpdateShardConfig(arg0 *shardproto.ShardProto) error {
	ret := m.ctrl.Call(m, "UpdateShardConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShardConfig indicates an expected call of UpdateShardConfig
func (mr *MockShardStorageMockRecorder) UpdateShardConfig(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateShardConfig", reflect.TypeOf((*MockShardStorage)(nil).UpdateShardConfig), arg0)
}
