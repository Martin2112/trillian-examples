// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shard.proto

/*
Package shard is a generated protocol buffer package.

It is generated from these files:
	shard.proto

It has these top-level messages:
	ShardProto
*/
package shard

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import keyspb "github.com/google/trillian/crypto/keyspb"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ShardState int32

const (
	ShardState_SHARD_STATE_UNKNOWN    ShardState = 0
	ShardState_SHARD_STATE_NEEDS_INIT ShardState = 1
	ShardState_SHARD_STATE_ACTIVE     ShardState = 2
	ShardState_SHARD_STATE_FAILED     ShardState = 3
)

var ShardState_name = map[int32]string{
	0: "SHARD_STATE_UNKNOWN",
	1: "SHARD_STATE_NEEDS_INIT",
	2: "SHARD_STATE_ACTIVE",
	3: "SHARD_STATE_FAILED",
}
var ShardState_value = map[string]int32{
	"SHARD_STATE_UNKNOWN":    0,
	"SHARD_STATE_NEEDS_INIT": 1,
	"SHARD_STATE_ACTIVE":     2,
	"SHARD_STATE_FAILED":     3,
}

func (x ShardState) String() string {
	return proto.EnumName(ShardState_name, int32(x))
}
func (ShardState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ShardProto struct {
	Uuid        []byte     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	State       ShardState `protobuf:"varint,2,opt,name=state,enum=shard.ShardState" json:"state,omitempty"`
	KeyHash     []byte     `protobuf:"bytes,3,opt,name=key_hash,json=keyHash,proto3" json:"key_hash,omitempty"`
	Description string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Time of shard creation.
	// Readonly.
	CreateTime *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	// Time of shard update.
	UpdateTime *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	// Server private key - this is never sent on the wire.
	PrivateKey *keyspb.PrivateKey `protobuf:"bytes,7,opt,name=private_key,json=privateKey" json:"private_key,omitempty"`
	// Server public key - this is returned to the provisioning server
	// during setup.
	PublicKey *keyspb.PublicKey `protobuf:"bytes,8,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
}

func (m *ShardProto) Reset()                    { *m = ShardProto{} }
func (m *ShardProto) String() string            { return proto.CompactTextString(m) }
func (*ShardProto) ProtoMessage()               {}
func (*ShardProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ShardProto) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *ShardProto) GetState() ShardState {
	if m != nil {
		return m.State
	}
	return ShardState_SHARD_STATE_UNKNOWN
}

func (m *ShardProto) GetKeyHash() []byte {
	if m != nil {
		return m.KeyHash
	}
	return nil
}

func (m *ShardProto) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ShardProto) GetCreateTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ShardProto) GetUpdateTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *ShardProto) GetPrivateKey() *keyspb.PrivateKey {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *ShardProto) GetPublicKey() *keyspb.PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func init() {
	proto.RegisterType((*ShardProto)(nil), "shard.ShardProto")
	proto.RegisterEnum("shard.ShardState", ShardState_name, ShardState_value)
}

func init() { proto.RegisterFile("shard.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x5f, 0x8f, 0x94, 0x30,
	0x14, 0xc5, 0x65, 0x76, 0x67, 0xff, 0x5c, 0x8c, 0x99, 0xad, 0xc9, 0x8a, 0xf3, 0x22, 0xd9, 0x17,
	0x27, 0x26, 0x82, 0xee, 0xc6, 0x27, 0x9f, 0x66, 0x1d, 0xcc, 0x4e, 0xd6, 0xe0, 0x04, 0x50, 0x13,
	0x5f, 0x48, 0x61, 0xea, 0xd0, 0x0c, 0x4c, 0x6b, 0x5b, 0x8c, 0x7c, 0x62, 0xbf, 0x86, 0xa1, 0x05,
	0x42, 0x4c, 0xcc, 0x3e, 0x71, 0x7b, 0xcf, 0xfd, 0xb5, 0x27, 0x87, 0x0b, 0xb6, 0x2c, 0xb0, 0xd8,
	0x7a, 0x5c, 0x30, 0xc5, 0xd0, 0x54, 0x1f, 0xe6, 0xef, 0x76, 0x54, 0x15, 0x75, 0xe6, 0xe5, 0xac,
	0xf2, 0x77, 0x8c, 0xed, 0x4a, 0xe2, 0x2b, 0x41, 0xcb, 0x92, 0xe2, 0x83, 0x9f, 0x8b, 0x86, 0x2b,
	0xe6, 0xef, 0x49, 0x23, 0x79, 0xd6, 0x7d, 0x0c, 0x3d, 0x7f, 0xd1, 0xcd, 0xea, 0x53, 0x56, 0xff,
	0xf0, 0x15, 0xad, 0x88, 0x54, 0xb8, 0xe2, 0x66, 0xe0, 0xea, 0xcf, 0x04, 0x20, 0x6e, 0x5f, 0xd8,
	0xe8, 0xd7, 0x10, 0x1c, 0xd7, 0x35, 0xdd, 0x3a, 0x96, 0x6b, 0x2d, 0x1e, 0x47, 0xba, 0x46, 0x2f,
	0x61, 0x2a, 0x15, 0x56, 0xc4, 0x99, 0xb8, 0xd6, 0xe2, 0xc9, 0xf5, 0x85, 0x67, 0xec, 0x69, 0x2a,
	0x6e, 0x85, 0xc8, 0xe8, 0xe8, 0x39, 0x9c, 0xed, 0x49, 0x93, 0x16, 0x58, 0x16, 0xce, 0x91, 0xbe,
	0xe0, 0x74, 0x4f, 0x9a, 0x3b, 0x2c, 0x0b, 0xe4, 0x82, 0xbd, 0x25, 0x32, 0x17, 0x94, 0x2b, 0xca,
	0x0e, 0xce, 0xb1, 0x6b, 0x2d, 0xce, 0xa3, 0x71, 0x0b, 0xbd, 0x07, 0x3b, 0x17, 0x04, 0x2b, 0x92,
	0xb6, 0x16, 0x9d, 0xa9, 0x6b, 0x2d, 0xec, 0xeb, 0xb9, 0x67, 0xfc, 0x7b, 0xbd, 0x7f, 0x2f, 0xe9,
	0xfd, 0x47, 0x60, 0xc6, 0xdb, 0x46, 0x0b, 0xd7, 0x7c, 0x3b, 0xc0, 0x27, 0x0f, 0xc3, 0x66, 0x5c,
	0xc3, 0x37, 0x60, 0x73, 0x41, 0x7f, 0xb5, 0xf4, 0x9e, 0x34, 0xce, 0xa9, 0x86, 0x91, 0xd7, 0xe5,
	0xb8, 0x31, 0xd2, 0x3d, 0x69, 0x22, 0xe0, 0x43, 0x8d, 0xde, 0x00, 0xf0, 0x3a, 0x2b, 0x69, 0xae,
	0x99, 0x33, 0xcd, 0x5c, 0x0c, 0x8c, 0x56, 0x5a, 0xe4, 0x9c, 0xf7, 0xe5, 0xab, 0x9f, 0x5d, 0xd0,
	0x3a, 0x32, 0xf4, 0x0c, 0x9e, 0xc6, 0x77, 0xcb, 0x68, 0x95, 0xc6, 0xc9, 0x32, 0x09, 0xd2, 0x2f,
	0xe1, 0x7d, 0xf8, 0xf9, 0x5b, 0x38, 0x7b, 0x84, 0xe6, 0x70, 0x39, 0x16, 0xc2, 0x20, 0x58, 0xc5,
	0xe9, 0x3a, 0x5c, 0x27, 0x33, 0x0b, 0x5d, 0x02, 0x1a, 0x6b, 0xcb, 0x0f, 0xc9, 0xfa, 0x6b, 0x30,
	0x9b, 0xfc, 0xdb, 0xff, 0xb8, 0x5c, 0x7f, 0x0a, 0x56, 0xb3, 0xa3, 0x5b, 0x02, 0x57, 0x39, 0xab,
	0xfa, 0x18, 0xfa, 0x7d, 0x79, 0x4d, 0x7e, 0xe3, 0x8a, 0x97, 0x44, 0x9a, 0x60, 0x6e, 0x47, 0xff,
	0x7f, 0x63, 0x7d, 0x7f, 0xfb, 0xff, 0x45, 0x1b, 0x40, 0x5f, 0x60, 0x5a, 0xee, 0xea, 0x83, 0xaf,
	0x37, 0x21, 0x3b, 0xd1, 0xf7, 0xdc, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x50, 0x61, 0xc9,
	0xb8, 0x02, 0x00, 0x00,
}
