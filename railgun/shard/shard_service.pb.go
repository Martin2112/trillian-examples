// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shard_service.proto

/*
Package shard is a generated protocol buffer package.

It is generated from these files:
	shard_service.proto

It has these top-level messages:
	ShardProvisionRequest
	ShardProvisionResponse
*/
package shard

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sigpb "github.com/google/trillian/crypto/sigpb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ShardProvisionRequest struct {
	// This should contain a digitally signed marshalled ShardProto.
	ShardConfig *sigpb.DigitallySigned `protobuf:"bytes,1,opt,name=shard_config,json=shardConfig" json:"shard_config,omitempty"`
}

func (m *ShardProvisionRequest) Reset()                    { *m = ShardProvisionRequest{} }
func (m *ShardProvisionRequest) String() string            { return proto.CompactTextString(m) }
func (*ShardProvisionRequest) ProtoMessage()               {}
func (*ShardProvisionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ShardProvisionRequest) GetShardConfig() *sigpb.DigitallySigned {
	if m != nil {
		return m.ShardConfig
	}
	return nil
}

type ShardProvisionResponse struct {
	// This should contain a digitally signed marshalled ShardProto. This
	// represents the config that was instated by the shard and may differ
	// from the request.
	ProvisionedConfig *sigpb.DigitallySigned `protobuf:"bytes,2,opt,name=provisioned_config,json=provisionedConfig" json:"provisioned_config,omitempty"`
}

func (m *ShardProvisionResponse) Reset()                    { *m = ShardProvisionResponse{} }
func (m *ShardProvisionResponse) String() string            { return proto.CompactTextString(m) }
func (*ShardProvisionResponse) ProtoMessage()               {}
func (*ShardProvisionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ShardProvisionResponse) GetProvisionedConfig() *sigpb.DigitallySigned {
	if m != nil {
		return m.ProvisionedConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*ShardProvisionRequest)(nil), "shard.ShardProvisionRequest")
	proto.RegisterType((*ShardProvisionResponse)(nil), "shard.ShardProvisionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ShardProvisioning service

type ShardProvisioningClient interface {
	Provision(ctx context.Context, in *ShardProvisionRequest, opts ...grpc.CallOption) (*ShardProvisionResponse, error)
}

type shardProvisioningClient struct {
	cc *grpc.ClientConn
}

func NewShardProvisioningClient(cc *grpc.ClientConn) ShardProvisioningClient {
	return &shardProvisioningClient{cc}
}

func (c *shardProvisioningClient) Provision(ctx context.Context, in *ShardProvisionRequest, opts ...grpc.CallOption) (*ShardProvisionResponse, error) {
	out := new(ShardProvisionResponse)
	err := grpc.Invoke(ctx, "/shard.ShardProvisioning/Provision", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShardProvisioning service

type ShardProvisioningServer interface {
	Provision(context.Context, *ShardProvisionRequest) (*ShardProvisionResponse, error)
}

func RegisterShardProvisioningServer(s *grpc.Server, srv ShardProvisioningServer) {
	s.RegisterService(&_ShardProvisioning_serviceDesc, srv)
}

func _ShardProvisioning_Provision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardProvisionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardProvisioningServer).Provision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shard.ShardProvisioning/Provision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardProvisioningServer).Provision(ctx, req.(*ShardProvisionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShardProvisioning_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shard.ShardProvisioning",
	HandlerType: (*ShardProvisioningServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Provision",
			Handler:    _ShardProvisioning_Provision_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shard_service.proto",
}

func init() { proto.RegisterFile("shard_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x76, 0x82, 0x82, 0x99, 0x97, 0x45, 0x1c, 0x32, 0x14, 0xa4, 0x27, 0x2f, 0x26, 0xb8, 0x9d,
	0xbc, 0x4e, 0xbd, 0x78, 0x2a, 0xed, 0xcd, 0x4b, 0x69, 0xbb, 0x98, 0x3d, 0x48, 0xf3, 0x62, 0x92,
	0x0e, 0xf7, 0xdf, 0xcb, 0xf2, 0x58, 0x51, 0x71, 0x5e, 0x02, 0xf9, 0xf2, 0xbe, 0x1f, 0xf9, 0x1e,
	0xbb, 0x08, 0xeb, 0xda, 0xaf, 0xaa, 0xa0, 0xfc, 0x06, 0x5a, 0x25, 0x9c, 0xc7, 0x88, 0xfc, 0x24,
	0x81, 0xb3, 0x85, 0x86, 0xb8, 0xee, 0x1b, 0xd1, 0x62, 0x27, 0x35, 0xa2, 0x36, 0x4a, 0x46, 0x0f,
	0xc6, 0x40, 0x6d, 0x65, 0xeb, 0xb7, 0x2e, 0xa2, 0x0c, 0xa0, 0x5d, 0x43, 0x27, 0x71, 0xb3, 0x82,
	0x5d, 0x96, 0x3b, 0x76, 0xee, 0x71, 0x03, 0x01, 0xd0, 0x16, 0xea, 0xa3, 0x57, 0x21, 0xf2, 0x47,
	0x76, 0x4e, 0x5e, 0x2d, 0xda, 0x77, 0xd0, 0x57, 0xa3, 0xdb, 0xd1, 0xdd, 0x78, 0x3e, 0x15, 0x44,
	0x7e, 0x06, 0x0d, 0xb1, 0x36, 0x66, 0x5b, 0x82, 0xb6, 0x6a, 0x55, 0x8c, 0xd3, 0xec, 0x53, 0x1a,
	0xcd, 0x2a, 0x36, 0xfd, 0xad, 0x19, 0x1c, 0xda, 0xa0, 0xf8, 0x0b, 0xe3, 0x6e, 0x0f, 0xaa, 0x41,
	0xfa, 0xf8, 0x5f, 0xe9, 0xc9, 0x37, 0x06, 0x19, 0xcc, 0x2b, 0x36, 0xf9, 0x69, 0x00, 0x56, 0xf3,
	0x57, 0x76, 0x36, 0xdc, 0xf9, 0xb5, 0x48, 0x81, 0xc4, 0x9f, 0x7f, 0x9b, 0xdd, 0x1c, 0x78, 0xa5,
	0x94, 0xd9, 0xd1, 0xd2, 0xb0, 0xac, 0xc5, 0x4e, 0x50, 0x8b, 0x62, 0xdf, 0xe2, 0xbd, 0xfa, 0xac,
	0x3b, 0x67, 0x54, 0xa0, 0xee, 0x96, 0x14, 0xa2, 0xa4, 0x5d, 0xe4, 0x3b, 0x28, 0x1f, 0xbd, 0x3d,
	0x1c, 0xde, 0xc2, 0xc0, 0x97, 0xbe, 0x06, 0xa3, 0x7b, 0x2b, 0x53, 0x8c, 0xe6, 0x34, 0xc9, 0x2d,
	0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x6c, 0x9b, 0xe7, 0xdd, 0x01, 0x00, 0x00,
}
